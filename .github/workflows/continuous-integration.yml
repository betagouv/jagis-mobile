name: Continuous Integration

on:
  push:
    branches: ["main"]
    paths:
      - .github/workflows/continuous-integration.yml
      - app/**
      - packages/**
  pull_request:
    branches: ["main"]
    paths:
      - .github/workflows/continuous-integration.yml
      - app/**
      - packages/**
    types: [synchronize, opened, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  draft-check:
    if: github.event.pull_request.draft == true
    runs-on: ubuntu-latest
    steps:
      - name: ❌ Fail for draft PR
        run: |
          echo "Cette PR est en mode draft. Les checks complets seront exécutés quand la PR sera prête pour la revue."
          exit 1

  continuous-integration:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            dsfr:
              - 'packages/dsfr.dart/**'
      - name: 🐦 Install flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          flutter-version-file: app/pubspec.yaml
      - name: ✅ Check app (format, lint, tests)
        run: |
          cd app
          # dart format $(find . -name '*.dart' -not -name '*.g.dart') --set-exit-if-changed
          flutter analyze --fatal-infos --fatal-warnings
          flutter test --test-randomize-ordering-seed random
          cd -
      - name: ✅ Check dsfr (format, lint, tests)
        if: steps.filter.outputs.dsfr == 'true'
        run: |
          cd packages/dsfr.dart
          # dart format $(find . -name '*.dart' -not -name '*.g.dart') --set-exit-if-changed
          flutter analyze --fatal-infos --fatal-warnings
          flutter test --test-randomize-ordering-seed random
          cd -