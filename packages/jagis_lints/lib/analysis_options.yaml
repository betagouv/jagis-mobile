include: all_lints.yaml

formatter:
  page_width: 130

analyzer:
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true
  errors:
    included_file_warning: ignore
    missing_required_param: error
    missing_return: error
    record_literal_one_positional_no_trailing_comma: error

linter:
  rules:
    always_put_required_named_parameters_first: false
    always_specify_types: false
    avoid_annotating_with_dynamic: false
    avoid_classes_with_only_static_members: false
    avoid_final_parameters: false # incompatible with `prefer_final_parameters`.
    avoid_positional_boolean_parameters: false
    diagnostic_describe_all_properties: false
    discarded_futures: false # NOTE(lsaudon): Fais bug mocktail
    document_ignores: false
    lines_longer_than_80_chars: false
    one_member_abstracts: false
    prefer_asserts_with_message: false
    prefer_double_quotes: false # incompatible with `prefer_single_quotes`.
    prefer_relative_imports: false # incompatible with `always_use_package_imports`.
    public_member_api_docs: false
    specify_nonobvious_property_types: false
    specify_nonobvious_local_variable_types: false
    type_annotate_public_apis: false
    unnecessary_async: false
    unnecessary_final: false # incompatible with `prefer_final_parameters`.
    unsafe_variance: false


dart_code_metrics:
  extends:
    - package:dart_code_metrics_presets/all.yaml
    - package:dart_code_metrics_presets/bloc.yaml
    - package:dart_code_metrics_presets/equatable.yaml
  pubspec-rules:
    - avoid-any-version
    - avoid-dependency-overrides
    # - banned-dependencies 
    # - prefer-caret-version-syntax # incompatible with `prefer-pinned-version-syntax`.
    # - prefer-correct-package-name
    - prefer-correct-screenshots
    - prefer-pinned-version-syntax
    - prefer-publish-to-none
    - prefer-semver-version
  rules:
    - arguments-ordering:
        first:
          - key
          - context
        last:
          - child
          - children
    - avoid-duplicate-collection-elements: false # NOTE(lsaudon): Pas pertinent en flutter
    - avoid-duplicate-test-assertions: false # NOTE(lsaudon): Le test de comportement fait que l'on teste plusieurs fois la même chose
    - avoid-dynamic: false
    - avoid-empty-build-when: false # NOTE(lsaudon): à voir
    - avoid-ignoring-return-values: false # NOTE(lsaudon): On veut rien faire des fois
    - avoid-late-keyword: false
    - avoid-local-functions: false
    - avoid-long-files: false
    - avoid-long-functions:
        exclude:
          - test/**
    - avoid-nested-conditional-expressions: false
    - avoid-nested-switch-expressions: false
    - avoid-non-ascii-symbols: false # NOTE(lsaudon): C'est en français
    - avoid-non-null-assertion: false # NOTE(lsaudon): à voir
    - avoid-passing-async-when-sync-expected: false # NOTE(lsaudon): Faux positif
    - avoid-redundant-async:
        exclude:
          - test/**/step/**
    - avoid-returning-cascades: false # NOTE(lsaudon): Souvent utilisé pour les blocs
    - avoid-shadowing:
        ignore-static: false
        ignore-fields: true
        ignore-parameters: true
        ignored-names:
          - context
    - avoid-shrink-wrap-in-lists: false # TODO(lsaudon): à réactiver quand tu pourras fix
    - avoid-similar-names: false # NOTE(lsaudon): règle flou
    - avoid-top-level-members-in-tests: false # NOTE(lsaudon): à voir
    - avoid-type-casts: false # NOTE(lsaudon): C'est chiant pour le json
    - avoid-unsafe-collection-methods: false # NOTE(lsaudon): à voir
    - check-is-not-closed-after-async-gap: false # NOTE(lsaudon): à voir
    - enum-constants-ordering: false # NOTE(lsaudon): On ne veut surtout pas trié par ordre alphabétique
    - format-comment: false # NOTE(lsaudon): C'est juste des commentaire
    - map-keys-ordering: false # NOTE(lsaudon): Le tri permet de choisir l'affichage souvent ou une logique métier
    - match-getter-setter-field-names: false # NOTE(lsaudon): Non, merci un vrai nom c'est mieux
    - member-ordering:
        alphabetize: false # Passer à true pour trier l10n.dart, asset et endpoints.
        order:
          - constructors
          - public-fields
          - private-fields
    - missing-test-assertion: false # NOTE(lsaudon): Non pertinent avec bdd_widget_test
    - newline-before-case: false # NOTE(lsaudon): ça prend de la place quand même
    - newline-before-method: false # NOTE(lsaudon): ça prend de la place quand même
    - no-empty-block: false # NOTE(lsaudon): Des fois on veut rien faire
    - no-empty-string: false # NOTE(lsaudon): Non c'est bien ça évite null
    - no-equal-arguments: false # NOTE(lsaudon): Arrive trop souvent de manière légitime en flutter
    - no-magic-number: false # NOTE(lsaudon): Trop contraignant
    - no-magic-string: false # NOTE(lsaudon): Peut permettre de trouver les oublis de localisation
    - parameters-ordering: false # NOTE(lsaudon): Non
    - prefer-boolean-prefixes: false
    - prefer-class-destructuring: false # NOTE(lsaudon): Trop vieux pour ça
    - prefer-commenting-analyzer-ignores: false # NOTE(lsaudon): C'est chiant
    - prefer-container: false # NOTE(lsaudon): Je prèfere limiter container pour avoir uniquement ce que je veux
    - prefer-correct-callback-field-name: false
    - prefer-correct-identifier-length: false # NOTE(lsaudon): Je nomme comme je veux.
    - prefer-correct-handler-name: false # NOTE(lsaudon): Je nomme comme je veux.
    - prefer-correct-switch-length: false # NOTE(lsaudon): Il y a une bonne taille de switch ?
    - prefer-correct-throws: false # NOTE(lsaudon): C'est quoi @Throws ?
    - prefer-correct-type-name: false # NOTE(lsaudon): Je nomme comme je veux.
    - prefer-digit-separators: false # NOTE(lsaudon): Si il y a l'option régle tous pourquoi pas
    - prefer-early-return: false # NOTE(lsaudon): Bonne règle mais plus dans la tête que dans le linter, c'est des fois moins compréhensible 
    - prefer-extracting-callbacks: false # NOTE(lsaudon): La plus part des cas ça éloigne juste le code de son appelant sans plus value
    - prefer-explicit-type-arguments: false # NOTE(lsaudon): Pourquoi pas
    - prefer-extracting-function-callbacks: false # NOTE(lsaudon): La plus part des cas ça éloigne juste le code de son appelant sans plus value
    - prefer-for-in: false # NOTE(lsaudon): Vraiment ?
    - prefer-for-loop-in-children: false # NOTE(lsaudon): Vraiment ?
    - prefer-getter-over-method: false # NOTE(lsaudon): Pourquoi pas mais moins que les autres
    - prefer-type-over-var: false # NOTE(lsaudon): var c'est bien
    - prefer-typedefs-for-callbacks: false
    - prefer-match-file-name: false
    - prefer-moving-to-variable:
        exclude:
          - test/**
    - prefer-named-boolean-parameters: false # NOTE(lsaudon): Pas le choix par certains packages
    - prefer-named-parameters: false # NOTE(lsaudon): J'essaye de garder les named parameters pour la partie flutter, ça fait souvent redites dans le reste
    - prefer-prefixed-global-constants: false # NOTE(lsaudon): inutile de savoir que c'est une const ou pas
    - prefer-returning-conditional-expressions: false # NOTE(lsaudon): c'est des fois mon compréhensible
    - prefer-single-declaration-per-file: false # NOTE(lsaudon): Pourquoi pas
    - prefer-single-widget-per-file:
        ignore-private-widgets: true
    - prefer-static-class: false # NOTE(lsaudon): Pourquoi pas
    - prefer-static-method: false # NOTE(lsaudon): C'est mieux dans une classe pour pouvoir mock/fake
    - prefer-trailing-comma: false # NOTE(lsaudon): dartfmt le gère maintenant
    - prefer-widget-private-members:
        ignore-static: true
    - unnecessary-trailing-comma: false # NOTE(lsaudon): dartfmt le gère maintenant